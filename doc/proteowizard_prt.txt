Usage: msconvert [options] [filemasks]
Convert mass spec data file formats.

Return value: # of failed files.

Options:
  -f [ --filelist ] arg            : specify text file containing filenames
  -o [ --outdir ] arg (=.)         : set output directory ('-' for stdout) [.]
  -c [ --config ] arg              : configuration file (optionName=value)
  --outfile arg                    : Override the name of output file.
  -e [ --ext ] arg                 : set extension for output files 
                                   [mzML|mzXML|mgf|txt|mz5]
  --mzML                           : write mzML format [default]
  --mzXML                          : write mzXML format
  --mz5                            : write mz5 format
  --mgf                            : write Mascot generic format
  --text                           : write ProteoWizard internal text format
  --ms1                            : write MS1 format
  --cms1                           : write CMS1 format
  --ms2                            : write MS2 format
  --cms2                           : write CMS2 format
  -v [ --verbose ]                 : display detailed progress information
  --64                             : set default binary encoding to 64-bit 
                                   precision [default]
  --32                             : set default binary encoding to 32-bit 
                                   precision
  --mz64                           : encode m/z values in 64-bit precision 
                                   [default]
  --mz32                           : encode m/z values in 32-bit precision
  --inten64                        : encode intensity values in 64-bit 
                                   precision
  --inten32                        : encode intensity values in 32-bit 
                                   precision [default]
  --noindex                        : do not write index
  -i [ --contactInfo ] arg         : filename for contact info
  -z [ --zlib ]                    : use zlib compression for binary data
  --numpressLinear [=arg(=2e-009)] : use numpress linear prediction compression
                                   for binary mz and rt data (relative accuracy
                                   loss will not exceed given tolerance arg, 
                                   unless set to 0)
  --numpressPic                    : use numpress positive integer compression 
                                   for binary intensities (absolute accuracy 
                                   loss will not exceed 0.5)
  --numpressSlof [=arg(=0.0002)]   : use numpress short logged float 
                                   compression for binary intensities (relative
                                   accuracy loss will not exceed given 
                                   tolerance arg, unless set to 0)
  -n [ --numpressAll ]             : same as --numpressLinear --numpressSlof 
                                   (see https://github.com/fickludd/ms-numpress
                                   for more info)
  -g [ --gzip ]                    : gzip entire output file (adds .gz to 
                                   filename)
  --filter arg                     : add a spectrum list filter
  --merge                          : create a single output file from multiple 
                                   input files by merging file-level metadata 
                                   and concatenating spectrum lists
  --simAsSpectra                   : write selected ion monitoring as spectra, 
                                   not chromatograms
  --srmAsSpectra                   : write selected reaction monitoring as 
                                   spectra, not chromatograms
  --combineIonMobilitySpectra      : write all drift bins/scans in a 
                                   frame/block as one spectrum instead of 
                                   individual spectra
  --acceptZeroLengthSpectra        : some vendor readers have an efficient way 
                                   of filtering out empty spectra, but it takes
                                   more time to open the file
  --ignoreUnknownInstrumentError   : if true, if an instrument cannot be 
                                   determined from a vendor file, it will not 
                                   be an error 
  --help                           : show this message, with extra detail on 
                                   filter options

FILTER OPTIONS
run this command with --help to see more detail
index 
msLevel 
chargeState 
precursorRecalculation 
mzRefiner mzRefiner input1.pepXML input2.mzid [msLevels=<1->]
[thresholdScore=] [thresholdValue=]
[thresholdStep=] [maxSteps=]
precursorRefine 
peakPicking [ [snr=]
[peakSpace=] [msLevel=]]
scanNumber 
scanEvent 
scanTime 
sortByScanTime 
stripIT 
metadataFixer 
titleMaker 
threshold    []
mzWindow 
mzPrecursors 
defaultArrayLength 
zeroSamples  []
mzPresent     
[]
scanSumming [precursorTol=] [scanTimeTol=]
MS2Denoise [ [
[multicharge_fragment_relaxation]]]
MS2Deisotope [hi_res [mzTol=]] [Poisson [minCharge=]
[maxCharge=]]
ETDFilter [ [ [
[ [ ]]]]]
chargeStatePredictor [overrideExistingCharge=]
[maxMultipleCharge=] [minMultipleCharge=]
[singleChargeFractionTIC=] [maxKnownCharge=]
[makeMS2=]
turbocharger [minCharge=] [maxCharge=]
[precursorsBefore=] [precursorsAfter=] [halfIsoWidth=] [defaultMinCharge=]
[defaultMaxCharge=] [useVendorPeaks=]
activation 
analyzer 
analyzerType 
polarity 


Examples:

# convert data.RAW to data.mzML
msconvert data.RAW

# convert data.RAW to data.mzXML
msconvert data.RAW --mzXML

# put output file in my_output_dir
msconvert data.RAW -o my_output_dir

# combining options to create a smaller mzML file, much like the old ReAdW converter program
msconvert data.RAW --32 --zlib --filter "peakPicking true 1-" --filter "zeroSamples removeExtra"

# extract scan indices 5...10 and 20...25
msconvert data.RAW --filter "index [5,10] [20,25]"

# extract MS1 scans only
msconvert data.RAW --filter "msLevel 1"

# extract MS2 and MS3 scans only
msconvert data.RAW --filter "msLevel 2-3"

# extract MSn scans for n>1
msconvert data.RAW --filter "msLevel 2-"

# apply ETD precursor mass filter
msconvert data.RAW --filter ETDFilter

# remove non-flanking zero value samples
msconvert data.RAW --filter "zeroSamples removeExtra"

# remove non-flanking zero value samples in MS2 and MS3 only
msconvert data.RAW --filter "zeroSamples removeExtra 2 3"

# add missing zero value samples (with 5 flanking zeros) in MS2 and MS3 only
msconvert data.RAW --filter "zeroSamples addMissing=5 2 3"

# keep only HCD spectra from a decision tree data file
msconvert data.RAW --filter "activation HCD"

# keep the top 42 peaks or samples (depending on whether spectra are centroid or profile):
msconvert data.RAW --filter "threshold count 42 most-intense"

# multiple filters: select scan numbers and recalculate precursors
msconvert data.RAW --filter "scanNumber [500,1000]" --filter "precursorRecalculation"

# multiple filters: apply peak picking and then keep the bottom 100 peaks:
msconvert data.RAW --filter "peakPicking true 1-" --filter "threshold count 100 least-intense"

# multiple filters: apply peak picking and then keep all peaks that are at least 50% of the intensity of the base peak:
msconvert data.RAW --filter "peakPicking true 1-" --filter "threshold bpi-relative .5 most-intense"

# use a configuration file
msconvert data.RAW -c config.txt

# example configuration file
mzXML=true
zlib=true
filter="index [3,7]"
filter="precursorRecalculation"


Questions, comments, and bug reports:
http://proteowizard.sourceforge.net
support@proteowizard.org

ProteoWizard release: 3.0.7374 (2015-4-10)
ProteoWizard MSData: 3.0.7374 (2015-4-10)
ProteoWizard Analysis: 3.0.7303 (2015-3-13)
Build date: Apr 13 2015 19:06:20

--------------------------------------
AB SCIEX MS Data Converter User Guide
--------------------------------------
AB_SCIEX_MS_Converter <input format> <input data> <output content type> <output format> <output file> [data compression setting] [data precision setting] [create index flag]
#AB_SCIEX_MS_Converter WIFF "D:\File D.wiff" -proteinpilot MGF "D:\File D.mgf"

#MGF
Converts to the Mascot Generic Format. Only MS/MS spectra are converted. 
The -profile mode may not be used to convert to the MGF format, as this is a peak list format.
#MZML
Converts to the mzML format. All data levels are converted (MS1, MS2 and MSn).
Conversion of MRM data is also supported.

#-profile
Gives the full x-y trace recorded by the instrument without any reduction in information content. 
This mode cannot be used to convert to the MGF format.
#-centroid
This option gives the centroided peak list as determined by the instrument?s software in real time during acquisition.
#-proteinpilot
This option gives the exact peak list that would be searched by ProteinPilot Software. 
In the case of TOF/TOF data, the centroid data is what is searched by this software, 
so they are identical. In the case of wiff data, 
the raw data are processed by a slower but higher quality signal processing approach that produces better results for protein identification applications.

#/nocompression
Stores the binary arrays without using any compression. 
This option is mutually exclusive with the /zlib option. 
If specified for MGF format export, this will be ignored.
#/zlib
Compresses the binary arrays using zlib algorithm. 
This option is the default behavior if nothing is indicated. 
It is mutually exclusive with the /nocompression option. 
If specified for MGF format export, this will be ignored.
#/singleprecision
Outputs binary data using 32-bit float single precision. 
This option is mutually exclusive with the /doubleprecision option.
#/doubleprecision
Outputs binary data using 64-bit float double precision. 
This option is the default behavior if nothing indicated. 
It is mutually exclusive with the /singleprecision option.
#/index
Writes the index for mzML data. Please, refer to